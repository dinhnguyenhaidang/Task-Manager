/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Font;
import java.util.LinkedList;
import java.util.Collections;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import sources.Task;

/**
 *
 * @author Dinh Nguyen Hai Dang - B1704721
 */
public class EditFrame extends javax.swing.JFrame {

    private Font defaultFont = new Font("Calibri", Font.PLAIN, 18);
    public static Task editingTask;
    private LinkedList<Integer> previousTasks;

    /**
     * Creates new form EditFrame
     */
    public EditFrame() {
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTaskID = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        labelDuration = new javax.swing.JLabel();
        labelPredecessors = new javax.swing.JLabel();
        textTaskID = new javax.swing.JTextField();
        scrollPaneDescription = new javax.swing.JScrollPane();
        textDescription = new javax.swing.JTextArea();
        textDuration = new javax.swing.JTextField();
        labelUnit = new javax.swing.JLabel();
        textPredecessors = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        comboBoxPredecessors = new javax.swing.JComboBox();
        buttonReset = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit");
        setName("insertFrame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(480, 640));

        labelTaskID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        labelTaskID.setText("Task ID:");

        labelDescription.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        labelDescription.setText("Description:");

        labelDuration.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        labelDuration.setText("Duration:");

        labelPredecessors.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        labelPredecessors.setText("Predecessors:");

        textTaskID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        textTaskID.setEnabled(false);

        textDescription.setColumns(20);
        textDescription.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        textDescription.setRows(5);
        scrollPaneDescription.setViewportView(textDescription);

        textDuration.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        labelUnit.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        labelUnit.setText("day(s)");

        textPredecessors.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        textPredecessors.setEnabled(false);

        buttonAdd.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        comboBoxPredecessors.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        buttonReset.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        buttonReset.setText("Reset");
        buttonReset.setPreferredSize(new java.awt.Dimension(98, 39));
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        buttonSave.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        buttonCancel.setText("Cancel");
        buttonCancel.setPreferredSize(new java.awt.Dimension(98, 39));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        menuHelp.setText("Help");
        menuHelp.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        menuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHelpMouseClicked(evt);
            }
        });
        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonSave)
                .addGap(36, 36, 36)
                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPredecessors, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textPredecessors, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(textDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelUnit)))
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxPredecessors, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(labelTaskID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPaneDescription)
                            .addComponent(textTaskID, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonCancel, buttonSave});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonAdd, buttonReset});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTaskID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textTaskID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDescription)
                    .addComponent(scrollPaneDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textPredecessors)
                        .addComponent(buttonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboBoxPredecessors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelPredecessors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonAdd, buttonReset});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void load() {
        try {
            textTaskID.setText(Integer.toString(editingTask.getTaskID()));
            textDescription.setText(editingTask.getDescription());
            textDuration.setText(Integer.toString(editingTask.getDuration()));
            previousTasks = new LinkedList<>();
            for (int task : editingTask.getPredecessors()) {
                previousTasks.add(task);
            }
            textPredecessors.setText(previousTasks.toString());
        } catch (NullPointerException ex) {
            JLabel message = new JLabel("This form must be opened from the main interface in order to work properly.");
            message.setFont(defaultFont);
            JOptionPane.showMessageDialog(this, message, null, JOptionPane.PLAIN_MESSAGE);
            disableAll();
        }

        comboBoxPredecessors.removeAllItems();
        for (Task task : MainFrame.taskList) {
            comboBoxPredecessors.addItem(task.getTaskID());
        }
        comboBoxPredecessors.setSelectedIndex(-1);
    }

    private void clearAll() {
        textTaskID.setText(null);
        textDescription.setText(null);
        textDuration.setText(null);
        previousTasks.clear();
        textPredecessors.setText(null);
        comboBoxPredecessors.setSelectedIndex(-1);
        textDescription.grabFocus();
    }

    private void disableAll() {
        textDescription.setEnabled(false);
        textDuration.setEnabled(false);
        comboBoxPredecessors.setEnabled(false);
        buttonAdd.setEnabled(false);
        buttonReset.setEnabled(false);
        buttonSave.setEnabled(false);
        buttonCancel.setEnabled(false);
    }

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        try {
            // Change values of editingTask
            editingTask.setDescription(textDescription.getText());
            int duration = Integer.parseInt(textDuration.getText());
            
            // Check constraints
            if (duration < 0 || 9000 < duration) {
                JLabel message = new JLabel("Duration must be in range of [0, 9000].");
                message.setFont(defaultFont);
                JOptionPane.showMessageDialog(this, message, null, JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            editingTask.setDuration(Integer.parseInt(textDuration.getText()));
            editingTask.setPredecessors(previousTasks);
            
            // Announce
            JLabel message = new JLabel("Edited task " + editingTask.getTaskID() + " successfully.");
            message.setFont(defaultFont);
            JOptionPane.showMessageDialog(this, message, null, JOptionPane.PLAIN_MESSAGE);
        } catch (NumberFormatException ex1) {
            JLabel message = new JLabel("Duration must be an integer.");
            message.setFont(defaultFont);
            JOptionPane.showMessageDialog(this, message, null, JOptionPane.ERROR_MESSAGE);
            return;
        } catch (NullPointerException ex2) {
            JLabel message = new JLabel("This form must be opened from the main interface in order to work properly.");
            message.setFont(defaultFont);
            JOptionPane.showMessageDialog(this, message, null, JOptionPane.PLAIN_MESSAGE);
        }
        
        // Update data in table
        MainFrame.load();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        clearAll();
        load();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        int selectedTask;
        try {
            // Get selected value from the combo box
            selectedTask = Integer.parseInt(comboBoxPredecessors.getSelectedItem().toString());

            // Add selectedTask to previousTasks
            if (selectedTask == editingTask.getTaskID()) { // Selected task is the same as the editing task
                JLabel message = new JLabel("A task can\'t be its own predecessor.");
                message.setFont(defaultFont);
                JOptionPane.showMessageDialog(this, message, null, JOptionPane.ERROR_MESSAGE);
            } else if (!previousTasks.contains(selectedTask)) { // Selected task is already in previousTasks
                previousTasks.add(selectedTask);
                Collections.sort(previousTasks);
                textPredecessors.setText(previousTasks.toString());
            }
        } catch (NullPointerException ex) {
            // This exception occurs when comboBox's selected index is -1.
            // Do nothing.
        }

        // Reset combo box's selected index
        comboBoxPredecessors.setSelectedIndex(-1);
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        previousTasks.clear();
        textPredecessors.setText(previousTasks.toString());
    }//GEN-LAST:event_buttonResetActionPerformed

    private void menuHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuHelpMouseClicked
        EditHelp frame = new EditHelp();
        frame.setVisible(true);
    }//GEN-LAST:event_menuHelpMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox comboBoxPredecessors;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelDuration;
    private javax.swing.JLabel labelPredecessors;
    private javax.swing.JLabel labelTaskID;
    private javax.swing.JLabel labelUnit;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JScrollPane scrollPaneDescription;
    private javax.swing.JTextArea textDescription;
    private javax.swing.JTextField textDuration;
    private javax.swing.JTextField textPredecessors;
    private javax.swing.JTextField textTaskID;
    // End of variables declaration//GEN-END:variables
}
